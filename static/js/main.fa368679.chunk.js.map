{"version":3,"sources":["logo.svg","components/Cell.js","components/Game.js","containers/TicTacToe.js","redux/actions.js","components/ResetButton.js","containers/ResetGame.js","App.js","redux/reducers/game.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","Cell","props","react_default","a","createElement","onClick","val","Game","arr","num","temp","idx","newArr","i","slice","splice","push","split","cells","map","index","components_Cell","key","className","concat","TicTacToe","clickButton","_this","_this2","this","cellList","game","components_Game","React","Component","connect","state","dispatch","type","payload","move","ResetButton","ResetGame","components_ResetButton","App","containers_ResetGame","containers_TicTacToe","initialState","Array","fill","combineReducers","arguments","length","undefined","action","turns","forEach","Object","assign","toConsumableArray","createStore","rootReducer","ReactDOM","render","es","store","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fa368679.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nfunction Cell (props) {\n  return (\n    <button onClick={props.onClick}>{props.val}</button>\n  )\n}\n\nexport default Cell;\n","import React, { Fragment } from 'react';\nimport Cell from './Cell';\nimport './Game.css';\n\nfunction Game(props) {\n  const cells = props.cells.map((val, index) => {\n    return (\n      <Cell key={val.i} onClick={val.onClick} val={val.val}/>\n    )\n  });\n  return (\n    split(cells, 3).map((val, idx) => {\n      return (\n        <div className={`Row${idx}`} key={idx}>{val}</div>\n      )\n    })\n  )\n}\n\nfunction split(arr, num) {\n  let temp, idx, newArr = [];\n  for (let i = 0; i < num; i ++) {\n    idx = i * num;\n    temp = arr.slice().splice(idx, 3)\n    newArr.push(temp)\n  }\n  return newArr\n}\n\n\n\nexport default Game;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { move } from '../redux/actions';\nimport Game from '../components/Game';\n// import Cell from './Cell';\n\n\n// <Cell key={i} onClick={()=>this.clickButton(i)} val={val}/>\n\nclass TicTacToe extends React.Component {\n  clickButton = (index) => {\n    this.props.onClick(index)\n  }\n  render() {\n    const cellList = this.props.game.map((val, i) => {\n      return (\n        {\n          key: i, onClick: ()=>this.clickButton(i), val: val\n        }\n      )\n    })\n    return (\n      <Game cells={cellList} />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  game: state.game,\n})\nconst mapDispatchToProps = dispatch => ({\n  onClick: (index) => dispatch(move(index))\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TicTacToe);\n","export const move = index => ({\n  type: 'MOVE',\n  payload: index\n})\n\n\n\n\nexport const reset = () => ({\n  type: 'RESET'\n})\n","import React from 'react';\n\nfunction ResetButton(props) {\n  return (\n    <button onClick={props.clickButton}>reset</button>\n  )\n}\n\nexport default ResetButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { reset } from '../redux/actions';\nimport ResetButton from '../components/ResetButton';\n\nclass ResetGame extends React.Component {\n  clickButton = () => {\n    this.props.onClick()\n  }\n  render() {\n    return (\n      <ResetButton clickButton={()=> this.clickButton()}/>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: () => dispatch(reset())\n})\n\nexport default connect(\n  null, mapDispatchToProps\n)(ResetGame);\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport TicTacToe from './containers/TicTacToe';\nimport ResetGame from './containers/ResetGame';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <h1>React-Redux TicTacToe</h1>\n          <ResetGame />\n\n          <TicTacToe />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\n  game: Array(9).fill(null)\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case 'MOVE': {\n      const game = state.slice();\n      let turns = 0;\n      game.forEach((val) => {\n        if (typeof val === 'string') {\n          turns ++\n        }\n      })\n      const index = action.payload;\n        if (game[index] !== null) {\n          return Object.assign({}, { game: [...game] }).game\n        } else {\n          game[index] = (turns % 2 === 0 ? 'O' : 'X')\n          return Object.assign({}, { game: [...game] }).game\n        }\n      }\n    case 'RESET': {\n      const game = Array(9).fill(null);\n      return Object.assign({}, { game: [...game] }).game\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport game from \"./game\";\n\nexport default combineReducers({ game });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {\n  game: Array(9).fill(null)\n};\n\nexport default createStore(rootReducer, initialState);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n</Provider>, document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}